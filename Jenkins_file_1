pipeline {
    agent any
    triggers {
        pollSCM('H 0 1 1 0')
    }

    options {
        buildDiscarder(logRotator(numToKeepStr:'100'))
    }

    
    environment {
        CC = "Clang"
        DEPENDENCIES_PATH = '/var/lib/jenkins/kv-jenkins-dependencies'
        KV_CI_SCRIPTS = "${DEPENDENCIES_PATH}/continuous-integration/scripts"
        UBOOT_LINUX_PATH = "${DEPENDENCIES_PATH}/uboot-linux-lamarr"
        KV_PYTHON_PATH = "${DEPENDENCIES_PATH}/python"
        KINETIC_DIR = 'kineticd-lamarr'
        UBOOT_LINUX_DIR = 'uboot-linux-lamarr'
        BUILD_OUTPUT_PATH = 'EmbeddedBuildComponents/Individual-Components/Installer/'
        ARM_DIR = 'arm'
        X86_DIR = 'x86'
        KINETIC_COMMIT = '${WORKSPACE}/kinetic_commit.txt'
        UBOOT_COMMIT = '${WORKSPACE}/uboot_commit.txt'
        GIT_SSL_NO_VERIFY = 'true'
    }
    
    stages {
        stage ("parameterizing") {
            steps {
                script{
                    print "AAAAAAAAAAAAAAAAAAAA"
                    LOCAL_BUILD_PATH = "Savitha_Senguttuvan"
                    
                    def list_name = ["HA_DEVICE","UBOOT_LINUX_BRANCHES"]
                    for(i in list_name) {
                        println params[i]
                        if(!(params.containsKey(i)) || (params[i] == "")) {
                            currentBuild.result = 'ABORTED'
                            //error('DRY RUN COMPLETED. JOB PARAMETERIZED.')
                        }
                    }
                    print "BBBBBBBBBBBBBBBBBBBB"
                }
            }
        }
        stage('Example') {
            environment {
                CC = "Clang"
            }
            steps {
                echo 'Hello World'
                sh 'printenv'
                echo "Hi2 ${params.PERSON}"
                echo "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
                echo "Hi3 ${params.Firmware_file_list}"
                echo "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB"
                sh "python 1.py -f ${params.Firmware_file_list} -t target_value"
                echo "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC"
                echo "Hi 4 ${params.bbb}"
                echo "All params"
                echo "${params}"
                echo "printing global variable"
                echo LOCAL_BUILD_PATH
            }
        }
    }
    post { 
        always { 
            emailext body: "${currentBuild.currentResult}: Job ${env.JOB_NAME} build ${env.BUILD_NUMBER}\n More info at: ${env.BUILD_URL}",
                subject: "Jenkins Build ${currentBuild.currentResult}: Job ${env.JOB_NAME}",
                to: 'savitha.senguttuvan@seagate.com twinsavita@gmail.com'
            echo 'I will always say Hello again!'
        }
        success {
            echo "Post::Success"
        }
    }
}

