pipeline {
    agent any
    triggers {
        pollSCM('H 0 1 1 0')
    }

    options {
        buildDiscarder(logRotator(numToKeepStr:'100'))
    }
    
    

    stages {
        stage("Parameters Check"){
            steps {
                script{
                    print "AAAAAAAAAAAAAAAAAAAA"
                    LOCAL_BUILD_PATH = "Savitha_Senguttuvan"
                    echo "printing global variable"
                    echo LOCAL_BUILD_PATH
                    print "BBBBBBBBBBBBBBBBBBBB"
                    echo "${WORKSPACE}/firmware_lists"
                    print "CCCCCCCCCCCCCCCCCCCCCCCCCC"
                }
            }
        }
        stage('X86 Unit Test') {
            steps {
                //lock("${LOCAL_BUILD_PATH}") {
                    echo 'Running X86 unit tests....'
                    echo "Running unit tests against device ${LOCAL_BUILD_PATH}"
                    timeout(time: 1, unit: 'HOURS') {
                        sh "python 1.py -t ${LOCAL_BUILD_PATH} -f savi shiva"
                    }
                //}
                   /*
                    def required_params = ["HA_DEVICE", "UBOOT_LINUX_BRANCHES","KINETICD_BRANCHES", "SLOD_NAMES","KINETIC_IPADDR"]
                    for(mandatory_param in required_params) {
                        println params[mandatory_param]
                        if(!(params.containsKey(mandatory_param)) || (params[mandatory_param] == "")) {
                            currentBuild.result = 'ABORTED'
                            error('DRY RUN COMPLETED. JOB PARAMETERIZED.')
                        }
                    }
                    */       
            }
        }
    }
    post { 
        always { 
            echo 'I will always say Hello again!'
        }
        success {
            echo "Post::Success"
        }
    }
}

